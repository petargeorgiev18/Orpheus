@model IEnumerable<Orpheus.ViewModels.InstrumentViewModel>

@{
	ViewData["Title"] = "All Merch";
	var currentSearch = ViewBag.SearchTerm ?? "";
	var currentSort = ViewBag.Sort ?? "";
	int currentPage = ViewBag.CurrentPage ?? 1;
	int totalPages = ViewBag.TotalPages ?? 1;
}

<h2 class="text-center my-4">🧢 Browse Band Merch</h2>

<!-- Filter Form -->
<form asp-action="Index" asp-controller="Merch" method="get" class="row g-2 mb-4 justify-content-center">
	<div class="col-md-4">
		<input type="text" name="searchTerm" class="form-control"
			   placeholder="Search by name or brand..."
			   value="@currentSearch" />
	</div>
	<div class="col-md-3">
		<select name="sort" class="form-select">
			<option value="">Sort by</option>
			<option value="priceAsc" selected="@(currentSort == "priceAsc")">Price: Low to High</option>
			<option value="priceDesc" selected="@(currentSort == "priceDesc")">Price: High to Low</option>
		</select>
	</div>
	<div class="col-auto">
		<button type="submit" class="btn btn-outline-primary">Apply</button>
	</div>
</form>

<!-- Merch Cards -->
<div class="row row-cols-1 row-cols-md-3 g-4">
	@if (!Model.Any())
	{
		<div class="col-12 text-center text-muted">No merch found.</div>
	}
	else
	{
		foreach (var item in Model)
		{
			<div class="col">
				<div class="card h-100 shadow-sm">
					<img src="@item.ImageUrl" class="card-img-top" alt="@item.Name" style="height: 200px; object-fit: cover;" />
					<div class="card-body d-flex flex-column">
						<h5 class="card-title">@item.Name</h5>
						<p class="text-muted">@item.BrandName</p>
						<p>@item.Description</p>
						<div class="mt-auto d-flex justify-content-between align-items-center">
							<strong class="text-primary">Price: @item.Price.ToString("F2") BGN</strong>
							<a asp-controller="Merch" asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm">Details</a>
						</div>
					</div>
				</div>
			</div>
		}
	}
</div>
<nav aria-label="Page navigation" class="mt-4">
	<ul class="pagination justify-content-center">
		<li class="page-item @(currentPage == 1 ? "disabled" : "")">
			<a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, searchTerm = currentSearch, sort = currentSort })">Previous</a>
		</li>

		@for (int i = 1; i <= totalPages; i++)
		{
			<li class="page-item @(currentPage == i ? "active" : "")">
				<a class="page-link" href="@Url.Action("Index", new { page = i, searchTerm = currentSearch, sort = currentSort })">@i</a>
			</li>
		}

		<li class="page-item @(currentPage == totalPages ? "disabled" : "")">
			<a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, searchTerm = currentSearch, sort = currentSort })">Next</a>
		</li>
	</ul>
</nav>
