@model Orpheus.ViewModels.ItemViewModel
@using Orpheus.ViewModels

@{
    ViewData["Title"] = $"{Model.Name} - Album Details";
    bool hasRealImages = Model.Images != null && Model.Images.Any(img => !img.Contains("/images/default-image.png"));
    bool multipleRealImages = Model.Images != null && Model.Images.Count(img => !img.Contains("/images/default-image.png")) > 1;
    string galleryAttribute = multipleRealImages ? "albumGallery" : "";
    bool isAuthenticated = User.Identity?.IsAuthenticated ?? false;
    bool isAdmin = User.IsInRole("Admin");
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-6">
            @if (Model.Images != null && Model.Images.Any())
            {
                <div id="imageCarousel" class="carousel slide rounded shadow" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        @for (int i = 0; i < Model.Images.Count; i++)
                        {
                            var imgUrl = Model.Images[i];
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <a href="@imgUrl" class="glightbox" @(galleryAttribute != "" ? $"data-gallery=\"{galleryAttribute}\"" : "") data-title="@Model.Name">
                                    <img src="@imgUrl" alt="@Model.Name" class="d-block w-100" style="max-height: 400px; object-fit: cover;" />
                                </a>
                            </div>
                        }
                    </div>

                    @if (multipleRealImages)
                    {
                        <button class="carousel-control-prev" type="button" data-bs-target="#imageCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon bg-dark rounded-circle p-2" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#imageCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon bg-dark rounded-circle p-2" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    }

                    <div class="mt-3 d-flex flex-wrap gap-2 justify-content-center">
                        @for (int i = 0; i < Model.Images.Count; i++)
                        {
                            var imgUrl = Model.Images[i];
                            <a href="@imgUrl" class="glightbox img-thumbnail p-0"
                               style="width: 80px; height: 80px; cursor: pointer;"
                            @(galleryAttribute != "" ? $"data-gallery=\"{galleryAttribute}\"" : "")
                               data-title="@Model.Name" data-glightbox-open="false">
                                <img src="@imgUrl" alt="Thumbnail @i" style="width: 100%; height: 100%; object-fit: cover;" />
                            </a>
                        }
                    </div>
                </div>
            }
            else
            {
                <img src="/images/default-image.png" alt="No image available" class="img-fluid rounded shadow" />
            }
        </div>

        <div class="col-md-6">
            <h1>@Model.Name</h1>
            <h4 class="text-muted">@Model.BrandName</h4>
            <p>@Model.Description</p>

            <h3 class="text-success">Price: @Model.Price.ToString("F2") BGN</h3>

            <div class="mt-4">
                @if (isAuthenticated && !isAdmin)
                {
                    <form method="post" asp-controller="Cart" asp-action="AddToCart" asp-route-id="@Model.Id" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-success me-2">Add to Cart</button>
                    </form>

                    <form method="post" asp-controller="Wishlist" asp-action="AddToWishlist" asp-route-id="@Model.Id" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-outline-success" title="Add to Wishlist">
                            <i class="bi bi-heart"></i>
                        </button>
                    </form>
                }

                <a asp-action="Index" asp-controller="Albums" class="btn btn-outline-secondary mt-3 d-block">← Back to list</a>

                @if (TempData["ReviewError"] != null)
                {
                    <div class="alert alert-danger mt-3">
                        @TempData["ReviewError"]
                    </div>
                }

                @if (isAuthenticated && !isAdmin)
                {
                    @await Html.PartialAsync("_ReviewFormPartial", new ReviewFormViewModel { ItemId = Model.Id })
                }

                @if (isAdmin)
                {
                    <div class="mt-3">
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning me-2">
                            <i class="bi bi-pencil-square"></i> Edit
                        </a>
                        <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                            <i class="bi bi-trash"></i> Delete
                        </a>
                    </div>
                }
            </div>

            <div class="mt-5">
                <h4>Reviews: (@Model.Reviews?.Count)</h4>

                @if (Model.Reviews != null && Model.Reviews.Any())
                {
                    <div class="list-group">
                        @foreach (var review in Model.Reviews)
                        {
                            <div class="list-group-item">
                                <div class="d-flex justify-content-between">
                                    <strong>@review.UserFullName</strong>
                                    <small class="text-muted">@review.CreatedAt.ToString("dd MMM yyyy")</small>
                                </div>
                                <div>
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <span class="@(i <= review.Rating ? "text-warning" : "text-secondary")">&#9733;</span>
                                    }
                                </div>
                                @if (!string.IsNullOrWhiteSpace(review.Comment))
                                {
                                    <p class="mt-1">@review.Comment</p>
                                }
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-muted">No reviews yet. Be the first to leave a review!</p>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const hasMultipleRealImages = @multipleRealImages.ToString().ToLower();

            const lightbox = GLightbox({
                selector: '.glightbox',
                loop: hasMultipleRealImages === "true",
                zoomable: true,
                height: '80%',
                width: '80%'
            });

            if (hasMultipleRealImages === "false") {
                lightbox.on('open', () => {
                    const prevBtn = document.querySelector('.gprev');
                    const nextBtn = document.querySelector('.gnext');
                    if (prevBtn) prevBtn.style.display = 'none';
                    if (nextBtn) nextBtn.style.display = 'none';
                });
            }
        });
    </script>
}