@model IEnumerable<Orpheus.ViewModels.ItemViewModel>

@{
    ViewData["Title"] = "All Albums";
    var currentSearch = ViewBag.SearchTerm ?? "";
    var currentSort = ViewBag.Sort ?? "";
    var selectedPrice = ViewBag.Price ?? "";
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    bool hasItems = Model.Any();
}

<div class="container mt-4">
    <h2 class="mb-4 text-center text-primary">🎧 Browse Our Albums</h2>

    @if (User.IsInRole("Admin"))
    {
        <div class="text-end mb-3">
            <a asp-controller="Brands" asp-action="Create" asp-route-type="album" class="btn btn-info me-2">
                <i class="bi bi-tag"></i> Add New Label
            </a>
            <a asp-controller="Albums" asp-action="Create" class="btn btn-success">
                <i class="bi bi-plus-circle"></i> Add New Album
            </a>
        </div>
    }

    <form asp-action="Index" asp-controller="Albums" method="get" class="row g-2 mb-4 justify-content-center align-items-center">
        <div class="col-md-5">
            <input type="text" name="searchTerm" class="form-control"
                   placeholder="Search by name or brand..."
                   value="@currentSearch" />
        </div>

        <div class="col-md-2">
            <select name="price" class="form-select">
                <option value="">All Prices</option>
                <option value="low" selected="@(selectedPrice == "low")">Under 20 BGN</option>
                <option value="mid" selected="@(selectedPrice == "mid")">20 - 60 BGN</option>
                <option value="high" selected="@(selectedPrice == "high")">60+ BGN</option>
            </select>
        </div>

        <div class="col-md-3">
            <select name="sort" class="form-select">
                <option value="">Sort by</option>
                <option value="priceAsc" selected="@(currentSort == "priceAsc")">Price: Low to High</option>
                <option value="priceDesc" selected="@(currentSort == "priceDesc")">Price: High to Low</option>
            </select>
        </div>

        <div class="col-auto">
            <button type="submit" class="btn btn-outline-primary">Apply</button>
        </div>
    </form>

    <div class="row row-cols-1 row-cols-md-3 g-4">
        @if (!hasItems)
        {
            <div class="col-12 text-center text-muted">No albums found.</div>
        }
        else
        {
            foreach (var item in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <img src="@item.ImageUrl" class="card-img-top" alt="@item.Name" style="height: 200px; object-fit: cover;" />
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@item.Name</h5>
                            <p class="text-muted">@item.BrandName</p>
                            <p>@item.Description</p>
                            <div class="mt-auto d-flex justify-content-between align-items-center">
                                <strong class="text-primary">Price: @item.Price.ToString("F2") BGN</strong>
                                <a asp-controller="Albums" asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm">Details</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>

    @if (hasItems && totalPages >= 1)
    {
        <nav aria-label="Page navigation" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@(currentPage == 1 ? "#" : Url.Action("Index", new {
                        page = currentPage - 1,
                        searchTerm = currentSearch,
                        price = selectedPrice,
                        sort = currentSort
                    }))">Previous</a>
                </li>

                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(currentPage == i ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new {
                            page = i,
                            searchTerm = currentSearch,
                            price = selectedPrice,
                            sort = currentSort
                        })">@i</a>
                    </li>
                }

                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="@(currentPage == totalPages ? "#" : Url.Action("Index", new {
                        page = currentPage + 1,
                        searchTerm = currentSearch,
                        price = selectedPrice,
                        sort = currentSort
                    }))">Next</a>
                </li>
            </ul>
        </nav>
    }
</div>